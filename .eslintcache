[{"/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/index.js":"1","/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/App.js":"2","/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/composants/Search.js":"3","/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/composants/Line.js":"4"},{"size":219,"mtime":1612456039042,"results":"5","hashOfConfig":"6"},{"size":1388,"mtime":1612525938163,"results":"7","hashOfConfig":"6"},{"size":620,"mtime":1612525340952,"results":"8","hashOfConfig":"6"},{"size":669,"mtime":1612532536767,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1o8b285",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/index.js",[],["20","21"],"/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/App.js",["22","23","24"],"import \"./App.css\";\nimport { useState } from \"react\";\nimport emojiList from \"./emojiList.json\";\nimport Search from \"./composants/Search\";\nimport Line from \"./composants/Line\";\n\nfunction App() {\n  // déclarer une state \"vide\" -> input vide au chargement de la page.\n  const [search, setSearch] = useState(\"\");\n\n  {\n    /* Objectif : générer les emojis et leur nom via des keywords */\n  }\n  {\n    /* Etape 1 : afficher les 20er éléments avant d'effectuer une recherche */\n  }\n  {\n    /* Etape 2 : afficher les éléments correspondants aux recherches en fonction des keywords dans l'input */\n  }\n\n  return (\n    <div className=\"container\">\n      <Search search={search} setSearch={setSearch} />\n      <div className=\"box\">\n        {search === \"\" ? (\n          <>\n            {emojiList.slice(0, 20).map((emoji, index) => {\n              return (\n                <Line key={index} title={emoji.title} symbol={emoji.symbol} />\n              );\n            })}\n          </>\n        ) : (\n          <>\n            {emojiList.map((emoji, index) => {\n              if (emoji.keywords.includes(search)) {\n                return (\n                  <Line key={index} title={emoji.title} symbol={emoji.symbol} />\n                );\n              } else {\n                return null;\n              }\n            })}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/composants/Search.js",[],"/Users/thomasbosson/Desktop/LeReacteur/React/04/emoji-search-app/src/composants/Line.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":11,"column":3,"nodeType":"31","messageId":"32","endLine":13,"endColumn":4},{"ruleId":"29","severity":1,"message":"30","line":14,"column":3,"nodeType":"31","messageId":"32","endLine":16,"endColumn":4},{"ruleId":"29","severity":1,"message":"30","line":17,"column":3,"nodeType":"31","messageId":"32","endLine":19,"endColumn":4},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]